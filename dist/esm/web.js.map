{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  CameraPreviewOptions,\n  CameraPreviewPictureOptions,\n  CameraPreviewPlugin,\n  CameraPreviewFlashMode,\n  CameraSampleOptions,\n  CameraOpacityOptions,\n} from './definitions';\n\nexport class CameraPreviewWeb extends WebPlugin implements CameraPreviewPlugin {\n  /**\n   *  track which camera is used based on start options\n   *  used in capture\n   */\n  private isBackCamera: boolean;\n\n  constructor() {\n    super({\n      name: 'CameraPreview',\n      platforms: ['web'],\n    });\n  }\n\n  async start(options: CameraPreviewOptions): Promise<void> {\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise(async (resolve, reject) => {\n      await navigator.mediaDevices\n        .getUserMedia({\n          audio: !options.disableAudio,\n          video: true,\n        })\n        .then((stream: MediaStream) => {\n          // Stop any existing stream so we can request media with different constraints based on user input\n          stream.getTracks().forEach((track) => track.stop());\n        })\n        .catch((error) => {\n          reject(error);\n        });\n\n      const video = document.getElementById('video');\n      const parent = document.getElementById(options.parent);\n\n      if (!video) {\n        const videoElement = document.createElement('video');\n        videoElement.id = 'video';\n        videoElement.setAttribute('class', options.className || '');\n\n        // Don't flip video feed if camera is rear facing\n        if (options.position !== 'rear') {\n          videoElement.setAttribute('style', '-webkit-transform: scaleX(-1); transform: scaleX(-1);');\n        }\n\n        const userAgent = navigator.userAgent.toLowerCase();\n        const isSafari = userAgent.includes('safari') && !userAgent.includes('chrome');\n\n        // Safari on iOS needs to have the autoplay, muted and playsinline attributes set for video.play() to be successful\n        // Without these attributes videoElement.play() will throw a NotAllowedError\n        // https://developer.apple.com/documentation/webkit/delivering_video_content_for_safari\n        if (isSafari) {\n          videoElement.setAttribute('autoplay', 'true');\n          videoElement.setAttribute('muted', 'true');\n          videoElement.setAttribute('playsinline', 'true');\n        }\n\n        parent.appendChild(videoElement);\n\n        if (navigator.mediaDevices?.getUserMedia) {\n          const constraints: MediaStreamConstraints = {\n            video: {\n              width: { ideal: options.width },\n              height: { ideal: options.height },\n            },\n          };\n\n          if (options.position === 'rear') {\n            (constraints.video as MediaTrackConstraints).facingMode = 'environment';\n            this.isBackCamera = true;\n          } else {\n            this.isBackCamera = false;\n          }\n\n          navigator.mediaDevices.getUserMedia(constraints).then(\n            function (stream) {\n              //video.src = window.URL.createObjectURL(stream);\n              videoElement.srcObject = stream;\n              videoElement.play();\n              resolve();\n            },\n            (err) => {\n              reject(err);\n            }\n          );\n        }\n      } else {\n        reject({ message: 'camera already started' });\n      }\n    });\n  }\n\n  async startRecordVideo(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async stopRecordVideo(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async stop(): Promise<any> {\n    const video = document.getElementById('video') as HTMLVideoElement;\n    if (video) {\n      video.pause();\n\n      const st: any = video.srcObject;\n      const tracks = st.getTracks();\n\n      for (const track of tracks) {\n        track.stop();\n      }\n      video.remove();\n    }\n  }\n\n  async capture(options: CameraPreviewPictureOptions): Promise<any> {\n    return new Promise((resolve) => {\n      const video = document.getElementById('video') as HTMLVideoElement;\n      const canvas = document.createElement('canvas');\n\n      // video.width = video.offsetWidth;\n\n      const context = canvas.getContext('2d');\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n\n      // flip horizontally back camera isn't used\n      if (!this.isBackCamera) {\n        context.translate(video.videoWidth, 0);\n        context.scale(-1, 1);\n      }\n      context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n\n      let base64EncodedImage;\n\n      if (options.quality != undefined) {\n        base64EncodedImage = canvas\n          .toDataURL('image/jpeg', options.quality / 100.0)\n          .replace('data:image/jpeg;base64,', '');\n      } else {\n        base64EncodedImage = canvas.toDataURL('image/png').replace('data:image/png;base64,', '');\n      }\n\n      resolve({\n        value: base64EncodedImage,\n      });\n    });\n  }\n\n  async captureSample(_options: CameraSampleOptions): Promise<any> {\n    return this.capture(_options);\n  }\n\n  async getSupportedFlashModes(): Promise<{\n    result: CameraPreviewFlashMode[];\n  }> {\n    throw new Error('getSupportedFlashModes not supported under the web platform');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async setFlashMode(_options: { flashMode: CameraPreviewFlashMode | string }): Promise<void> {\n    throw new Error('setFlashMode not supported under the web platform');\n  }\n\n  async flip(): Promise<void> {\n    throw new Error('flip not supported under the web platform');\n  }\n\n  async setOpacity(_options: CameraOpacityOptions): Promise<any> {\n    const video = document.getElementById('video') as HTMLVideoElement;\n    if (!!video && !!_options['opacity']) {\n      video.style.setProperty('opacity', _options['opacity'].toString());\n    }\n  }\n\n  async isCameraStarted(): Promise<{ value: boolean }> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n}\n"]}